<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="planDay">
    <insert id="insert" parameterType="hashmap">
        INSERT INTO plan_day (plan_id, user_id, day_order)
        SELECT #{planId}, #{userId}, #{dayOrder} FROM plan_day
        WHERE NOT EXISTS (
            SELECT plan_id, user_id, day_order FROM plan_day
            WHERE plan_id = #{planId} AND user_id = #{userId} AND day_order = #{dayOrder}
        )LIMIT 1
    </insert>

    <select id="getPlanDays" parameterType="hashmap" resultType="PlanDayDTO">
        SELECT *
        FROM plan_day
        WHERE plan_id = #{planId} AND user_id = #{userId}
    </select>

    <select id="getPlanWithDayOrder" parameterType="hashmap" resultType="PlanDayDTO">
        SELECT *
        FROM plan_day
        WHERE plan_id = #{planId} and user_id = #{userId} and day_order = #{dayOrder}
    </select>

    <update id="updateSpot" parameterType="hashmap">
        update plan_day
        set spot_id = #{spotId}
        where plan_id = #{planId} and user_id = #{userId} and day_order = #{dayOrder}
    </update>

    <update id="updateFlight" parameterType="hashmap">
        update plan_day
        set flight_id = #{flightId}
        where plan_id = #{planId} and user_id = #{userId} and day_order = #{dayOrder}
    </update>

    <update id="updateAccommodation" parameterType="hashmap">
        update plan_day
        set accommodation_id = #{accommodationId}
        where plan_id = #{planId} and user_id = #{userId} and day_order = #{dayOrder}
    </update>


    <!--<insert id="insert" parameterType="PlanDayDTO"
            useGeneratedKeys="true"
            keyProperty="id">
        insert into plan_day
        values (null, #{userId}, #{planId}, #{spotId}, #{accommodationId}, #{filghtId}, #{dayOrder}, #{itemType}, #{itemOrder})
    </insert>
    <update id="update" parameterType="PlanDayDTO">
        update plan_day
        set plan_id = #{planId}, spot_id = #{spotId}, end_date = #{endDate}, memo = #{memo}, updated_at = now()
        where id = #{id}
    </update>
    <select id="one" parameterType="Long" resultType="PlanDayDTO">
        select
           *
        from plan_day
        where id = #{id}
    </select>
    <select id="count" parameterType="Long" resultType="int">
        select count(id) from plan_day
        where user_id = ${userId}
    </select>
    <select id="all" resultType="PlanDayDTO">
        select
            *
        from plan
    </select>
    <delete id="delete" parameterType="PlanDayDTO">
        delete from plan_day
        where id = #{id}
    </delete>-->
</mapper>
