<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="chatMapper">
    <insert id="insertChatroom" parameterType="chatInfoDTO" useGeneratedKeys="true" keyProperty="roomId">
        INSERT INTO mate_chatroom (chatroom_name, post_id, guest_id, created_at) VALUES (
                                                                                            #{chatRoomName}, #{postId},
                                                                                            #{guestId}, NOW())
    </insert>
    <!-- Owner 추가 -->
    <insert id="insertOwnerChatroom" parameterType="chatInfoDTO" useGeneratedKeys="true">
        INSERT INTO mate_user_chatroom (user_id, chatroom_id, is_owner)
        VALUES (#{ownerId}, #{roomId}, 1)
    </insert>

    <!-- Guest 추가 -->
    <insert id="insertGuestChatroom" parameterType="chatInfoDTO" useGeneratedKeys="true">
        INSERT INTO mate_user_chatroom (user_id, chatroom_id, is_owner)
        VALUES (#{guestId}, #{roomId}, 0)
    </insert>
    <!-- 메세지 추가-->
    <insert id="insertChatMessage" parameterType="chatMessageDTO" useGeneratedKeys="true" keyProperty="messageId">
        INSERT INTO mate_chat_message (message_type,chatroom_id, sender_id, message,created_at)
        VALUES (#{messageType},#{roomId}, #{senderId}, #{message},#{sendTime})
    </insert>
    <!-- 챗룸 update -->
    <update id="updateLastChatIdByRoomId" parameterType="chatMessageDTO">
        UPDATE mate_chatroom
        SET last_chat_id = #{messageId}
        WHERE id = #{roomId};
    </update>
    <!-- sender update -->
    <update id="updateSenderChatroom" parameterType="chatMessageDTO">
        UPDATE mate_user_chatroom
        SET last_read_chat_id = #{messageId},
            unread_chat_number = 0
        WHERE user_id = #{senderId} AND chatroom_id=#{roomId};
    </update>
    <!-- receiver update -->
    <update id="updateReceiverChatroom" parameterType="chatMessageDTO">
        <![CDATA[
        UPDATE mate_user_chatroom
        SET unread_chat_number = CASE
                                     WHEN (unread_chat_number - #{messageId}) < 0 THEN 0
                                     ELSE (unread_chat_number - #{messageId})
            END
        WHERE user_id = #{senderId} AND chatroom_id = #{roomId};
        ]]>
    </update>
    <select id="getLastChatIdByRoomId" parameterType="Long" resultType="Long">
        select last_chat_id
        from mate_chatroom
        where id=#{roomId}
    </select>
    <select id="selectRoomIdByPostIdAndGuestID" parameterType="Long" resultType="Long">
        select id
        from mate_chatroom
        where post_id=#{postId} AND guest_id=#{guestId}
    </select>
    <select id="selectRoomInfoByRoomId" parameterType="chatroomRequestDTO" resultType="String">
        select chatroom_name
        from mate_chatroom
        where id=#{roomId}
    </select>
    <select id="selectReceiverIdByRoomIdAndSenderId" parameterType="chatroomRequestDTO" resultType="Long">
        select user_id
        from mate_user_chatroom
        where  not user_id = #{senderId}
          AND chatroom_id=#{roomId}
    </select>
    <select id="selectMessageListByRoomId" parameterType="chatroomRequestDTO" resultType="chatMessageDTO">
        select id,
               message_type as messageType,
               chatroom_id  as chatroomId,
               sender_id    as senderId,
               message,
               created_at   as createdAt
        from mate_chat_message
        where chatroom_id = #{roomId}
    </select>
    <update id="updateLastJoinAt" parameterType="map">
        UPDATE mate_user_chatroom
        SET last_join_at = NOW()
        WHERE user_id = #{userId}
          AND chatroom_id = #{roomId};
    </update>

    <select id="getChatRoomListById" parameterType="long" resultType="chatroomListDTO">
        select mc.id            as roomId,
               mc.chatroom_name as chatRoomName,
               mcm.message      as lastMessage,
               (
                   case
                       /*내가 방장이라면 -> 상대방=게스트의 프로필 이미지*/
                       when mc.guest_id != #{id} then user.profile_image
                       /*내가 게스트라면 -> 상대방=방장의 프로필 이미지*/
                       ELSE (select user.profile_image
                             from user
                             where user.id = (select muc.user_id
                                              from mate_user_chatroom muc
                                                       join mate_chatroom mc on mc.id = muc.id
                                              where muc.is_owner = 1))
                       end
                   )            as opponentProfileImg
        from mate_chatroom mc
                 join mate_chat_message mcm on mc.last_chat_id = mcm.id and mcm.message_type != 'JOIN'
                 join user
        on user.id = mc.guest_id
        where mc.guest_id = #{id}
           or mc.post_id IN (SELECT mb.id FROM mate_board mb WHERE mb.user_id = #{id})
    </select>
</mapper>











